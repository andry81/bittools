2022.04.03:
* new: README.md, .github/FUNDING.yml: shared donate link and badge
* changed: README.md: readme update

2022.03.05:
* fixed: src/bitsync: `/outss` option usage fixup

2022.03.05:
* fixed: src/bitsync: `/outss` option usage fixup
* changed: CMakeLists.txt: removed fftw library build

2022.03.05:
* fixed: build with the last dependencies
* changed: back merge with last changes

2022.02.19:
* fixed: _config, CMakeLists.txt: build cleanup
* fixed: src: gencrctbl, mirrorfile, xorfile: build fixup

2022.02.16:
* refactor: __init__: minor refactor

2022.02.16:
* changed: src/bitsync: minor interface change

2022.02.16:
* changed: src/bitsync: minor cleanup

2022.02.15:
* fixed: src/bitsync: `/insert-output-syncseq` option usage for an edge case
* new: src/bitsync: <last_offset> and <repeat> optional sub parameters for `/insert-output-syncseq` option
* new: src/bitsync: `/fill-output-syncseq`, `outssf` options to fill a synchro sequence into the output instead of insert it
* new: deploy/bitstreams: mixed offset bit stream example
* changed: src/bitsync: removed the check `insert_output_syncseq_period must be less than bit stream length`, left the check `insert_output_syncseq_first_offset must be less than bit stream length`
* changed: deploy/bitstreams: readme update

2022.02.09:
* fixed: src/bitsync: command line parameters check fixup
* new: src/bitsync: `/max-periods-in-offset`, `/maxpio` options and default value to reduce algorithm memory and time consumption
* changed: src/bitsync: improved algorithm memory and time consumption for default parameters
* changed: deploy/bitstreams: readme update

2022.02.08:
* changed: src/bitsync: version increment

2022.02.08:
* fixed: src/bitsync: command line parameters check fixup

2022.02.08:
* fixed: src/bitsync: minor fixup, algorithm complexity correction

2022.02.05:
* fixed: src/bitsync: missed to zeroing a buffer last byte bits remainder
* changed: src/bitsync: `memcpy_bitwise64` function moved into `tacklelib` library

2022.02.05:
* fixed: src/bitsync/autocorrelation.cpp: Wolfram Alpha details fix

2022.02.05:
* fixed: src/bitsync: accidental uninitialized bits remainder before the first synchro sequence insert in the `/insert-output-syncseq` option implementation
* fixed: src/bitsync: Time to time a bad alloc raises because of allocation of too big contiguous memory piece. The related to the error, array container is replaced by an deque.
* fixed: src/bitsync: command line checks fixup
* fixed: CMakeLists.txt: missed to exclude `*.bak` files
* new: src/bitsync: `/stream-bit-size`, `/si` to define stream length in bits instead of bytes (the output is still in bytes, so the last byte bits remainder may not be processed)
* changed: src/bitsync: minor improvements

2022.02.04:
* fixed: src/bitsync: minor fixup
* new: src/bitsync: The `/insert-output-syncseq`, `/outss` options to insert a synchro sequence into the output. Can be used together with the `/gen-input-noise`, `/inn` options to output a bit stream with inserted arbitrary synchro sequence.
* new: deploy/bitstreams: bit stream examples + readme file
* changed: src/bitsync, deploy/scripts: removed `bits_per_baud` from the command line in case of `sync` mode
* changed: src/bitsync: minor improvements

2022.02.02:
* fixed: BuildTools/TargetProject.PreBuildStep.bat: invalid `-u` flag usage for the `thlibautocfg` utility

2022.02.02:
* fixed: src/bitsync: minor fixup
* new: src/bitsync: added weighted sums of correlation maximum mean values algorithm to increase output certainty and false positive resistance within input noise
* new: src/bitsync: print more statistic data
* new: src/bitsync: print `(UNCERTAIN)` note for uncertain offset/width values
* refactor: deploy/scripts: scripts minor refactor
* refactor: src/bitsync: code refactor

2022.02.01:
* fixed: CMakeLists.txt: missed to add `*.def` files as resources

2022.01.31:
* fixed: src/bitsync: rewrited autocorrelation mean values calculation algorithm to reduce memory consumption
* fixed: src/bitsync: other minor fixup
* new: src/bitsync: Implemented usage of `/autocorr-mean-buf-max-size` option to avoid out of memory in case of calculation autocorrelation means for too big bit streams. The autocorrelation mean values calculation algorithm will just quit early and so may calculate not certain enough or false positively instable values for the sake of reduced memory/time consumption. This option will have rare meaning for a memory consumption because the autocorrelation mean values calculation algorithm now has O(N) memory complexity, but still has o(N * N * N) or in approximation ~ (N ^ 1/3) * (N ^ 1/2) * N time complexity,  where N - length of a bit stream, when a big bit stream may significantly slow down the calculation. The only meaning is to cancel further calculation by a buffer size to save a time.
* new: src/bitsync: print more statistic data together with the offset and period like min/max periods, period min/used/max repeat, min/used autocorrelation mean value, all autocorrelation mean values been calculated, all autocorrelation values been iterated, used/max memory for autocorrelation mean values and etc
* changed: src/bitsync: deploy/scripts: scripts execution fixup
* changed: src/bitsync: other minor improvements
* refactor: src/bitsync: code refactor

2022.01.29:
* fixed: src/bitsync: accident zeroed synchro sequence of 32-bit width
* fixed: src/bitsync: deploy/scripts/search_syncseq.bat: script execution fixup
* changed: src/bitsync: code cleanup
* refactor: src/bitsync: code refactor

2022.01.28:
* new: src/bitsync: rewriten sychro sequence offset detection together with the bit stream width/period detection through the autocorrelation mean values calculation with input noise resistance
* new: src/bitsync: `/stream-min-period`, `/stream-max-period`, `/syncseq-min-repeat`, `/syncseq-max-repeat`, `/autocorr-mean-min`, `/autocorr-mean-buf-max-size-mb`, `/disable-calc-autocorr-mean` options and flags to control autocorrelation flow
* new: src/bitsync: `/tee-input` option to output preprocessed input, for example, preprocessed with the noise
* new: src/bitsync: added `fftw` library

2021.12.28:
* fixed: src/bitsync: multiple fixup
* new: src/bitsync: `/gen-input-noise` option and pipe mode to generate noise for input file
* refactor: src/bitsync: code refactor

2021.12.18:
* fixed: README.md: badges fixup

2021.12.05:
* changed: .github/workflows: removed all github workflows as not required anymore because moved into a single repository

2021.12.05:
* changed: .github/workflows: code cleanup

2021.12.01:
* changed: src/bitsync: `boost::program_options` replaced by a custom parser
* changed: src/bitsync: `gen_index` replaced by `gen_token` option

2021.11.30:
* new: src/bittools/help.tpl: `/gen-token` flag
* changed: src/_common: common headers
* changed: CMakeLists.txt: minor changes

2021.11.29:
* new: src/_common: common headers
* changed: CMakeLists.txt: minor changes

2021.11.28:
* changed: CMakeLists.txt: added `*.tpl` and `*.txt` files as part of `bitsync` sources

2021.11.27:
* changed: .github/workflows: added `deps_repo_owner` parameter to specifically address dependent repositories

2021.11.24:
* new: .github/workflows: use no-cache parameter for curl requests

2021.11.24:
* fixed: .github/workflows/accum-gh-*: repo rename

2021.11.23:
* changed: __init__, _config: BuildTools, CMakeLists.txt, src/bitsync: preparations to cut off the boost program_options dependency from bitsync

2021.11.21:
* new: .github/workflows: GitHub workflow switched to use GitHub composite action

2021.11.20:
* changed: .github/workflows: print `latest.json` into the pipeline for debug purposes

2021.11.19:
* new: .github/workflows: `bittools-gh-view-stats.yml` to generate `bittools` repo view stats
* new: README.md: github all/unique views badges

2021.11.19:
* fixed: *.bat: explicitly sort by name in `dir` command if the sort option is not defined to avoid sort by date as by default

2021.11.19:
* changed: .github/workflows: added reference to the `github-clone-count-badge` repo

2021.11.16:
* new: src/bitsync: `gen_index` to generate only particular baud combination
* new: deploy/scripts: `search_syncseq.bat` script for automation
* fixed: src/bitsync: multiple bug fix

2021.11.16:
* changed: src/bitsync: implementation rework

2021.11.12:
* new: README.md: `lgtm.com` link badges (disabled)
* changed: README.md: links update, realign

2021.11.11:
* new: README.md: `codeclimate.com` link badges (disabled)
* changed: README.md: badge icons and links update

2021.11.11:
* new: .github/workflows: `bittools-gh-clone-stats.yml` to generate `bittools` repo clone stats
* new: `README.md` readme file
* new: license file
* changed: README_EN.txt: readme update

2021.11.10:
* new: `bitsync` project

2021.11.10:
* fixed: temporary build fixup

2021.11.10:
* changed: upgraded to the latest tacklelib library

2020.02.10:
* changed: readme update

2019.11.24:
* new: changelog file
* changed: readme update
